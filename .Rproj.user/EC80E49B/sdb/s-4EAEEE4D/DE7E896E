{
    "contents" : "plot.plate.summary.for.bursts<-function(s,outputdir) {\n\tfor (i in (1:length(s))){\n\t\tbasename <- get.file.basename(s[[i]]$file)\n\t\tburstPlotPath = paste(outputdir,\"/\",basename,\"_burst_plot.pdf\",sep=\"\")\n\t\tpdf(file=burstPlotPath) \n\n\t\t#layout \n  \t\tp<-plot.mealayout.1(s[[i]]$layout, use.names=T, cex=0.25)\n  \t\ttitle(main= paste( paste(\"Electrode Layout\"), \n                     paste(\"file= \",  strsplit( basename(s[[i]]$file),\".h5\")[[1]][1], sep=\"\"),                             \n                     sep='\\n'))\n\n\t\t#MFR\n\t\tp<- plot.meanfiringrate(s[[i]], main = \"Mean Firing Rate by Plate (Hz)\")\n\t\t#p<- plot(s[[i]], main = \"\", label.cells = FALSE, use.names = FALSE)\n\n  \t\tp<-channel.plot.by.well(s[[i]],resp=\"meanfiringrate\", resp.label=\"Mean Firing Rate (Hz)\")\n\t\t#Mean Duration\n  \t\tp<-channel.plot.by.well(s[[i]],resp=\"bs$mean.dur\",resp.label=\"Mean Duration of Burst (s)\")\n\t\t#plot of Number of bursts by channel and well  \n  \t\tp<-channel.plot.by.well(s[[i]],resp=\"bs$nbursts\",resp.label=\"Number of Bursts\")\n\t\t#mean Inter Burst Interval \n  \t\tp<-channel.plot.by.well(s[[i]],resp=\"bs$mean.IBIs\",resp.label=\"Mean IBIs (ms)\")\n\t\t# mean ISI within bursts \n  \t\tp<-channel.plot.by.well(s[[i]],resp=\"bs$mean.isis\",resp.label=\"Mean ISI w/i Bursts (s)\")\n\t\t#mean burst per minute \n  \t\tp<-channel.plot.by.well(s[[i]],resp=\"bs$bursts.per.min\",resp.label=\"Mean Burst per Minute\")\n\t\t#mean spikes in a burst\n  \t\tp<-channel.plot.by.well(s[[i]],resp=\"bs$mean.spikes\",resp.label=\"Mean # Spikes/Burst\")\n\t\t#% spikes in a burst\n  \t\tp<-channel.plot.by.well(s[[i]],resp=\"bs$per.spikes.in.burst\",resp.label=\"% Spikes/Burst\")\n\t\tdev.off()  \n\t}\n}\n\nwrite.plate.summary.for.bursts<-function(s,outputdir) {\n\tmasterSum<-get.burst.info.averaged.over.well(s)\n\tfor (i in 1:length(s)){\n\t\tbasename <- get.file.basename(s[[i]]$file)\n\t\tcsvfile<-paste(outputdir,\"/\",basename,\"_bursts.csv\",sep=\"\")\n\n\t  \t##########data frame summarized over well\n  \t\t#get number of object in masterSum[[1]] list\n  \t\ttempdf<-c(); tempcolnames<-c()\n  \t\tfor (j in 2:length(masterSum[[i]])){\n    \t\t\ttempc<-unlist(masterSum[[i]][j])\n    \t\t\ttempdf<-cbind(tempdf,tempc)\n    \t\t\ttempcolnames<-c(tempcolnames,names(masterSum[[i]][j]) )\n    \t\t}#end of loop through masterSum list objects\n  \n  \t\t#need to switch around columns so first columns come first\n\t\tif (dim(tempdf)[2] > 20) { #for now\n\t\t\tif (dim(tempdf)[1] == 1) {\n\t\t\t\tdf<-cbind(t(tempdf[,21:25]),t(tempdf[,1:20]))\n\t\t\t} else {\n    \t\t\t\tdf<-cbind(tempdf[,21:25],tempdf[,1:20])\n\t\t\t}\n    \t\t\tcolnames<-c(tempcolnames[21:25],tempcolnames[1:20])\n    \t\t\tcolnames(df)<-colnames\n\t\t}\n\n  \t\t##################channel by channel burst summary\n\n  \t\t#meta data and misc\n  \t\t#get vector of which wells are active\n  \t\twellindex<-which(is.element(names(s[[i]]$treatment), unique(s[[i]]$cw)) )\n  \t\twell<-c(); treatment<-c(); size<-c(); dose<-c(); file<-c();\n  \n  \t\tfile<-rep(strsplit( basename(s[[i]]$file),\".h5\")[[1]][1], length(s[[i]]$cw))\n  \t\twell<-s[[i]]$cw\n  \n  \t\t#channel data frame\n  \t\tdf2<-cbind(file,well,as.data.frame( s[[i]]$bs[1:length(s[[i]]$bs)]) )\n  \n \t\t\n      \t#write a title\n    \t\twrite.table(\"Bursting Analysis averaged over Each Well\",\n                csvfile, sep=\",\", append=FALSE,row.names=FALSE,col.names=FALSE) \n  \n\n      \twrite.table(paste(\"file= \",  strsplit( basename(s[[i]]$file),\".h5\")[[1]][1], sep=\"\"),\n                  csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE) \n      \twrite.table(\" \",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n      \t#recording time\n      \twrite.table(paste(\"recording time (s): [\", paste(s[[i]]$rec.time[1],round(s[[i]]$rec.time[2]), sep=\" ,\"),\n            \"]\",sep=\"\"),csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n  \n      \twrite.table(\" \",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n  \n      \t#summary write data\n\t\tif (dim(df)[1] == 1) {\n      cols.want<-which(!is.element(colnames(df),c(\"treatment\",\"dose\", \"timepoint\") ) )\n\t\t\tsuppressWarnings(write.table(t(df[,cols.want] ),\n                  csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=TRUE))\n\t\t} else {\n\t\t  cols.want<-which(!is.element(colnames(df),c(\"treatment\",\"dose\", \"timepoint\") ) )\n\t\t\tsuppressWarnings(write.table(df[,cols.want],\n                  csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=TRUE))\n\n\t\t}\n      \t\n      \t#new lines\n      \twrite.table(\" \",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n      \twrite.table(\" \",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n      \n      \t#title\n      \twrite.table(\"Channel Burst Summary\",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n      \twrite.table(paste(\"file= \",  strsplit( basename(s[[i]]$file),\".h5\")[[1]][1], sep=\"\"),\n                  csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE) \n      \twrite.table(\" \",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n      \n      \t#channel data\n      \tsuppressWarnings(write.table(df2,\n                  csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=TRUE))\n    \t\t#new lines\n    \t\twrite.table(\" \",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n    \t\twrite.table(\" \",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n  \t\twrite.table(\" \",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n  \t\twrite.table(\" \",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n  \t\twrite.table(\" \",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n  \t\twrite.table(\" \",csvfile, sep=\",\", append=TRUE,row.names=FALSE,col.names=FALSE)\n\t}#end of loop through writting tables\n}\n",
    "created" : 1408137228490.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1628684938",
    "id" : "DE7E896E",
    "lastKnownWriteTime" : 1408138612,
    "path" : "F:/Duke/AxionData/RAnalysis/Code/chgv_bursts.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}
{
    "contents" : "# make-table-by-chem-v2.R\n# Diana Hall\n# 8-13-2014\n# purpose: to make a table by Div\n\n\nlibrary(meadq)\n\n\nEPA=0\ndrive.letter<-\"F\"\nif(EPA){\n  data.dir<-\"L:/Lab/NHEERL_MEA/PIP3 - Project/Data/Specific Aim 1/prepared_data/\"\n  output.dir<-\n    \"L:/Lab/NHEERL_MEA/PIP3 - Project/Analysis/DIVtable/\"\n  \n} else{\n  data.dir<-paste(drive.letter,\":/Kathleen/Data/prepared_data/\",sep=\"\")\n  output.dir<-paste(drive.letter,\n                     \":/Kathleen/Analysis/DIVtable/\",\n                     sep=\"\")\n}\n\ndata<-paste(data.dir,\"AllAEOntogeny_files.csv\",sep=\"\")\n\n\ntemp.df<-read.table(data,sep=\",\",header=T)\ndf.allDIV<-temp.df[temp.df$DIV!=12.1, ]\ndf.allDIV<-df.allDIV[!grepl(df.allDIV$trt,pattern=\"BIC\"), ]\n\nchem.dose<-paste( df.allDIV$trt, df.allDIV$dose,sep=\"_\"  )\nindex.c<-which(df.allDIV$dose==0)\n# need to make a new variable with plate\n\nchem.dose[index.c]<-paste(\"cont\", \n                          df.allDIV$date[index.c], \n                          df.allDIV$Plate.SN[index.c], \n                          sep=\"_\")\ndf.allDIV$chem.dose<-chem.dose\n\n\nendpoints.wanted<-setdiff(\n  names(df.allDIV)[which(is.element(sapply( df.allDIV, class), \n                                    c(\"numeric\",\"integer\")))],\n  c(\"date\",\"DIV\",\"dose\") )\n\n#make laymens names for endpoints\ntemp.ep<-endpoints.wanted\ntemp.ep[which(temp.ep==\"meanfiringrate\")]<-\n  \"Mean firing rate on AE\"\n\ntemp.ep[which(temp.ep==\"per.spikes.in.burst\")]<-\n  \"% Spikes in Bursts on ABE\"\n\ntemp.ep[which(temp.ep==\"mean.IBIs\")]<-\n  \"Inter Burst Interval on ABE (s)\"\n\ntemp.ep[which(temp.ep==\"mean.dur\")]<-\n  \"Burst Duration on ABE (s)\"\n\ntemp.ep[which(temp.ep==\"mean.isis\")]<-\"Inter Spike Interval in Burst on ABE\"\n\n\ntemp.ep[which(temp.ep==\"nABE\")]<-\n  \"# Actively Bursting Electrodes (>=0.5 burst/min)\"\n\ntemp.ep[which(temp.ep==\"nAE\")]<-\n  \"# Active Electrodes (>=5spikes/min)\"\n\ntemp.ep[which(temp.ep==\"r\")]<-\n  \"Correlation Coefficient all electrodes (r)\"\n\ntemp.ep[which(temp.ep==\"cv.network\")]<-\n  \"CV Network all electrodes (Keefer, 2013)\"\n\ntemp.ep[which(temp.ep==\"cv.time\")]<-\n  \"CV Time all electrodes (Keefer, 2013)\"\n\ntemp.ep[which(temp.ep==\"ns.peak.m\")]<-\n  \"# Spikes at Peak Network Spike (Eytan & Marom, J Neurosci, 2006)\"\n\ntemp.ep[which(temp.ep==\"ns.mean.spikes.in.ns\")]<-\n  \"# Spikes in Network Spike (Eytan & Marom, J Neurosci, 2006)\"\n\ntemp.ep[which(temp.ep==\"ns.n\")]<-\n  \"# Network Spikes (Eytan & Marom, J Neurosci, 2006)\"\n\ntemp.ep[which(temp.ep==\"ns.durn.m\")]<-\n  \"Network Spike Duration (s) (Eytan & Marom, J Neurosci, 2006)\"\n\ntemp.ep[which(temp.ep==\"ns.mean.spikes.in.ns\")]<-\n  \"# Spikes in Network Spikes (Eytan & Marom, J Neurosci, 2006)\"\n\ntemp.ep[which(temp.ep==\"ns.durn.sd\")]<-\n  \"sd of Network Spike duration (s) (Eytan & Marom, J Neurosci, 2006)\"\n\ntemp.ep[which(temp.ep==\"ns.mean.insis\")]<-\n  \"ISI of Spikes in Network Spikes (s) (Eytan & Marom, J Neurosci, 2006)\"\n\ntemp.ep[which(temp.ep==\"ns.percent.of.spikes.in.ns\")]<-\n  \"% Spikes in Network Spikes (Eytan & Marom, J Neurosci, 2006)\"\n\n\n\n\n\n# make initial data set\nDIV.all<-unique(df.allDIV$DIV)\n#DIV.wanted=5\ndf.combo.list=list()\nfor (DIV.wanted in DIV.all){\n  \n  df<-df.allDIV[ df.allDIV$DIV==DIV.wanted,  ]\n  \n  df.mean<-aggregate( df, by=list(df$chem.dose), FUN=mean, na.rm=T)\n  df.sd<-aggregate( df, by=list(df$chem.dose), FUN=sd, na.rm=T)\n  df.n<-aggregate( df, by=list(df$chem.dose), FUN=length)\n  df.se<-cbind(chem.dose.group=df.sd[,1], \n               df.sd[,2:length(df.sd[1,])]/sqrt( df.n[,2] ) )\n  \n  names(df.sd)<-paste(names(df.mean),\"sd\",sep=\".\")\n  names(df.se)<-paste(names(df.mean),\"se\",sep=\".\")\n  \n  df.combo<-cbind( df.mean[ ,c(9:26)], df.sd[ ,c(9:26)] )\n  order.combo.names<-sort(names(df.combo))\n  df.combo<-df.combo[ ,order.combo.names]\n  df.combo.temp<-cbind(chem.dose=df.mean[,1], n=df.n[,2], df.combo)\n  \n  df.combo.list[[paste(DIV.wanted)]]<-df.combo.temp\n} # end of loop through DIV.wanted\n\n\n\n\n##############  make data set ready for output\n# get a list of all chemicals in file\nchem.all<-unique( unlist( lapply( strsplit( unique(df.allDIV$chem.dose[ \n  !grepl( df.allDIV$chem.dose, pattern=\"^cont\")] ), split=\"_\" ), \n  function(x) x[1] ) ) )\n\nfor (cur.chem in chem.all ){\n  # cur.chem=\"Mevastatin\"\n  # get which plates the chemical was on\n  control.plates.wanted<-unique( paste(\"cont\",\n                   df.allDIV$date[df.allDIV$trt==cur.chem] ,\n                   df.allDIV$Plate.SN[df.allDIV$trt==cur.chem] ,\n                   sep=\"_\" ) )\n  chem.dose.wanted<-unique( df.allDIV$chem.dose[\n    grepl(pattern=paste(cur.chem), df.allDIV$chem.dose) ])\n  \n  for (cur.ep in endpoints.wanted ){\n    ## control\n    #make control.chem.dose\n   \n    df.by.con.temp<-matrix(0, nrow=length(DIV.all), ncol=3)\n    rownames(df.by.con.temp)<-DIV.all\n    colnames(df.by.con.temp)<-paste(c(paste(\"mean\",cur.ep,\"cont\",sep=\"-\"),\n                                      paste(\"sd\",cur.ep,\"cont\",sep=\"-\"),\n                                      paste(\"n\",cur.ep,\"cont\",sep=\"-\") ), \n                                      sep=\"-\")\n    for (cur.DIV in DIV.all){\n      # get index of DIV in list\n      cur.DIV.index<-which(cur.DIV==DIV.all)\n      \n      #which entry is wanted\n      chem.dose.wanted.index<-which(\n        is.element(df.combo.list[[cur.DIV.index]]$chem.dose,\n                   control.plates.wanted) )\n      \n      # get row wanted\n      cur.control.data<-unlist( df.combo.list[[\n        cur.DIV.index]][ chem.dose.wanted.index, cur.ep] )\n      m.c<-mean(cur.control.data, na.rm=T )\n      sd.c<-sd( cur.control.data, na.rm=T )\n      n.c<-length(cur.control.data)\n      cur.info<-c(m.c, sd.c, n.c )\n      # in case of empty matrix \n      if (length(cur.info)==3 ){\n        df.by.con.temp[cur.DIV.index, ]<-cur.info\n      }\n      \n    } # end of cur.DIV\n    \n    # prepend a 0 row to df\n    ep.need.zero<-c(\"meanfiringrate\",\"burst.per.min\", \"nAE\", \"nABE\")\n    if (!is.element(2, DIV.all)&is.element(cur.ep, ep.need.zero) ){\n      tempnames<-c(2, rownames(df.by.con.temp) )\n      df.by.con.temp<-rbind(rep(0, length(df.by.con.temp[1,] ) ),\n                            df.by.con.temp )\n      rownames(df.by.con.temp)<-tempnames\n    }\n    \n    df.by.con<- df.by.con.temp \n    \n    for (cur.chem.dose in chem.dose.wanted ){\n      # make empty matrix\n      df.by.con.temp<-matrix(0, nrow=length(DIV.all), ncol=3)\n      rownames(df.by.con.temp)<-DIV.all\n      colnames(df.by.con.temp)<-paste(c(paste(\"mean\",cur.ep,sep=\"-\"),\n                                        paste(\"sd\",cur.ep,sep=\"-\"),\n                                        paste(\"n\",cur.ep,sep=\"-\") ),\n                                      cur.chem.dose,\n                                      sep=\"-\")\n      for (cur.DIV in DIV.all){\n        # get index of DIV in list\n        cur.DIV.index<-which(cur.DIV==DIV.all)\n        \n        #which entry is wanted\n        chem.dose.wanted.index<-which(\n          df.combo.list[[cur.DIV.index]]$chem.dose==cur.chem.dose  )\n        \n        # which varaibles are wanted\n        vars.wanted<-c(cur.ep, paste(cur.ep,\".sd\",sep=\"\"),\"n\")\n        # get row wanted\n        cur.info<-unlist( df.combo.list[[\n          cur.DIV.index]][ chem.dose.wanted.index, vars.wanted] )\n        # in case of empty matrix \n        if (length(cur.info)==3 ){\n          df.by.con.temp[cur.DIV.index, ]<-cur.info\n        }\n       \n      } # end of cur.DIV\n      \n      # prepend a 0 row to df\n      ep.need.zero<-c(\"meanfiringrate\",\"burst.per.min\", \"nAE\", \"nABE\")\n      if (!is.element(2, DIV.all)&is.element(cur.ep, ep.need.zero) ){\n        tempnames<-c(2, rownames(df.by.con.temp) )\n        df.by.con.temp<-rbind(rep(0, length(df.by.con.temp[1,] ) ),\n                              df.by.con.temp )\n      }\n\n      df.by.con<-cbind(df.by.con, df.by.con.temp)\n            \n    } # end of cur.chem.dose  \n    \n    \n    #make header\n    L=length(df.by.con[1,])\n    output.header<-rep(\" \",L )\n    temp<-unlist(lapply(strsplit( colnames(df.by.con),split=\"-\" ),\n                        function(x) x[3] ))\n    temp2<-unlist(lapply(strsplit( temp, split=\"_\" ),\n                         function(x) x[2] ))\n    temp2[1:3]<-c(\"control\",\"0\",\"0\")\n    output.header[seq(1,L,3)]<-temp2[seq(1,L,3)]\n    b<-data.frame(rbind( rep(\" \", length(output.header)+1 ), \n                         c(\"Dose\",output.header ) ) )\n       \n    #add in DIV\n    if (!is.element(2, DIV.all)&is.element(cur.ep, ep.need.zero) ){\n      df.by.con<-cbind(DIV=c(2,DIV.all), df.by.con )\n    }else {\n      df.by.con<-cbind(DIV=DIV.all, df.by.con )\n    }\n    \n    \n    #rerrage colnames\n    output.col.names<-\n    unlist(lapply(strsplit( colnames(df.by.con),split=\"-\" ),\n                  function(x) x[1] ))\n\n    colnames(df.by.con)<-output.col.names\n\n    ##### output \n    output.path<-paste(output.dir, cur.chem,\".csv\",sep=\"\")\n    name.cur.ep<-temp.ep[cur.ep==endpoints.wanted]\n    \n    # check its first write to file\n    if (cur.ep==endpoints.wanted[1]){\n      temp.plates<-paste(unlist(lapply(strsplit(control.plates.wanted,\n                                  split=\"_\" ),\n                                 function(x) x[2])),\n                       unlist(lapply(strsplit(control.plates.wanted,\n                                          split=\"_\" ),\n                                 function(x) x[3]) ),\n                       sep=\"_\" )\n      temp<-c(\"Plates Used\",  temp.plates )\n      write.table(file=output.path, temp, sep=\",\", append=T,\n                  col.names=F, row.names=F)\n    }\n    \n    \n    write.table(file=output.path, \" \", sep=\",\", append=T,\n                col.names=F, row.names=F)\n    write.table(file=output.path, \" \", sep=\",\", append=T,\n                col.names=F, row.names=F)\n    write.table(file=output.path, name.cur.ep, sep=\",\", append=T, \n                row.names=F, col.names=F )\n    write.table(file=output.path, b, \n                sep=\",\", append=T, row.names=F, col.names=F )\n    write.table(file=paste( output.path), df.by.con,  sep=\",\", \n                append=T,row.names=F, col.names=T )\n    \n  } #end of cur.ep \n\n} #end of cur.chem\n\n\n\n",
    "created" : 1409156514599.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "78806523",
    "id" : "C2EF0D0A",
    "lastKnownWriteTime" : 1409175874,
    "path" : "F:/Kathleen/Analysis/DIVtable/make-table-by-chem-v2.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}
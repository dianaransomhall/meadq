assign("prepared.dir",paste( dirname(h5.dir[1]) , "prepared_data", sep="/"),
envir = .GlobalEnv )
dir.create( prepared.dir )
# output file names
assign( "csv.filename.AEfilt",paste( prepared.dir, "/ont_data_summary_AEfilt",sep=""),
envir = .GlobalEnv )
assign( "csv.filename.ABEfilt",paste( prepared.dir, "/ont_data_summary_ABEfilt",sep=""  ),
envir = .GlobalEnv )
if ( is.null( param.file ) ){
data('chgv_parameters' )
} else {
if ( grepl(x=basename( param.file) , pattern=".rda") ){
load(param.file)
} else{
source( param.file, local=TRUE  )
}
}
create_burst_ont_Data(h5Files=h5Files, save.rdata=save.rdata )
h5Files = NULL
save.rdata = TRUE
param.file = NULL
#get the directory containing the .h5 files
if (is.null(h5Files)){
h5Files<-sort(choose.files(caption="Choose .h5 Files") )
}
#create directories
assign("h5.dir", dirname(h5Files[1]), envir = .GlobalEnv )
assign("root.dir",dirname( dirname(h5Files[1]) ), envir = .GlobalEnv )
assign("prepared.dir",paste( dirname(h5.dir[1]) , "prepared_data", sep="/"),
envir = .GlobalEnv )
dir.create( prepared.dir )
# output file names
assign( "csv.filename.AEfilt",paste( prepared.dir, "/ont_data_summary_AEfilt",sep=""),
envir = .GlobalEnv )
assign( "csv.filename.ABEfilt",paste( prepared.dir, "/ont_data_summary_ABEfilt",sep=""  ),
envir = .GlobalEnv )
if ( is.null( param.file ) ){
data('chgv_parameters' )
} else {
if ( grepl(x=basename( param.file) , pattern=".rda") ){
load(param.file)
} else{
source( param.file, local=TRUE  )
}
}
create_burst_ont_Data(h5Files=h5Files, save.rdata=save.rdata )
library(sjemea)
library(rhdf5)
library(lattice)
#get the directory containing the .h5 files
if (is.null(h5Files)){
h5Files<-sort(choose.files(caption="Choose .h5 Files") )
}
#create directories
assign("h5.dir", dirname(h5Files[1]), envir = .GlobalEnv )
assign("root.dir",dirname( dirname(h5Files[1]) ), envir = .GlobalEnv )
assign("prepared.dir",paste( dirname(h5.dir[1]) , "prepared_data", sep="/"),
envir = .GlobalEnv )
dir.create( prepared.dir )
# output file names
assign( "csv.filename.AEfilt",paste( prepared.dir, "/ont_data_summary_AEfilt",sep=""),
envir = .GlobalEnv )
assign( "csv.filename.ABEfilt",paste( prepared.dir, "/ont_data_summary_ABEfilt",sep=""  ),
envir = .GlobalEnv )
if ( is.null( param.file ) ){
data('chgv_parameters' )
} else {
if ( grepl(x=basename( param.file) , pattern=".rda") ){
load(param.file)
} else{
source( param.file, local=TRUE  )
}
}
create_burst_ont_Data(h5Files=h5Files, save.rdata=save.rdata )
#get the directory containing the .h5 files
if (is.null(h5Files)){
h5Files<-sort(choose.files(caption="Choose .h5 Files") )
}
#create directories
assign("h5.dir", dirname(h5Files[1]), envir = .GlobalEnv )
assign("root.dir",dirname( dirname(h5Files[1]) ), envir = .GlobalEnv )
assign("prepared.dir",paste( dirname(h5.dir[1]) , "prepared_data", sep="/"),
envir = .GlobalEnv )
dir.create( prepared.dir )
# output file names
assign( "csv.filename.AEfilt",paste( prepared.dir, "/ont_data_summary_AEfilt",sep=""),
envir = .GlobalEnv )
assign( "csv.filename.ABEfilt",paste( prepared.dir, "/ont_data_summary_ABEfilt",sep=""  ),
envir = .GlobalEnv )
if ( is.null( param.file ) ){
data('chgv_parameters' )
} else {
if ( grepl(x=basename( param.file) , pattern=".rda") ){
load(param.file)
} else{
source( param.file, local=TRUE  )
}
}
create_burst_ont_Data(h5Files=h5Files, save.rdata=save.rdata )
install.packages("F:/R/Rpackage_meadq/meadq_1.0.4.zip", repos = NULL)
library(meadq)
create_burst_ont_Data
source('F:/Kathleen/Analysis/DIVtable/make-table-by-chem-v2.R')
library(meadq)
EPA=0
drive.letter<-"F"
if(EPA){
data.dir<-"L:/Lab/NHEERL_MEA/PIP3 - Project/Data/Specific Aim 1/prepared_data/"
output.dir<-
"L:/Lab/NHEERL_MEA/PIP3 - Project/Analysis/DIVtable/"
} else{
data.dir<-paste(drive.letter,":/Kathleen/Data/prepared_data/",sep="")
output.dir<-paste(drive.letter,
":/Kathleen/Analysis/DIVtable/",
sep="")
}
data<-paste(data.dir,"AllABEOntogeny_files.csv",sep="")
temp.df<-read.table(data,sep=",",header=T)
df.allDIV<-temp.df[temp.df$DIV!=12.1, ]
df.allDIV<-df.allDIV[!grepl(df.allDIV$trt,pattern="BIC"), ]
chem.dose<-paste( df.allDIV$trt, df.allDIV$dose,sep="_"  )
index.c<-which(df.allDIV$dose==0)
# need to make a new variable with plate
chem.dose[index.c]<-paste("cont",
df.allDIV$date[index.c],
df.allDIV$Plate.SN[index.c],
sep="_")
df.allDIV$chem.dose<-chem.dose
endpoints.wanted<-setdiff(
names(df.allDIV)[which(is.element(sapply( df.allDIV, class),
c("numeric","integer")))],
c("date","DIV","dose") )
#make laymens names for endpoints
temp.ep<-endpoints.wanted
temp.ep[which(temp.ep=="meanfiringrate")]<-
"Mean firing rate on AE"
temp.ep[which(temp.ep=="per.spikes.in.burst")]<-
"% Spikes in Bursts on ABE"
temp.ep[which(temp.ep=="mean.IBIs")]<-
"Inter Burst Interval on ABE (s)"
temp.ep[which(temp.ep=="mean.dur")]<-
"Burst Duration on ABE (s)"
temp.ep[which(temp.ep=="mean.isis")]<-"Inter Spike Interval in Burst on ABE"
temp.ep[which(temp.ep=="nABE")]<-
"# Actively Bursting Electrodes (>=0.5 burst/min)"
temp.ep[which(temp.ep=="nAE")]<-
"# Active Electrodes (>=5spikes/min)"
temp.ep[which(temp.ep=="r")]<-
"Correlation Coefficient all electrodes (r)"
temp.ep[which(temp.ep=="cv.network")]<-
"CV Network all electrodes (Keefer, 2013)"
temp.ep[which(temp.ep=="cv.time")]<-
"CV Time all electrodes (Keefer, 2013)"
temp.ep[which(temp.ep=="ns.peak.m")]<-
"# Spikes at Peak Network Spike (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.mean.spikes.in.ns")]<-
"# Spikes in Network Spike (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.n")]<-
"# Network Spikes (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.durn.m")]<-
"Network Spike Duration (s) (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.mean.spikes.in.ns")]<-
"# Spikes in Network Spikes (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.durn.sd")]<-
"sd of Network Spike duration (s) (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.mean.insis")]<-
"ISI of Spikes in Network Spikes (s) (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.percent.of.spikes.in.ns")]<-
"% Spikes in Network Spikes (Eytan & Marom, J Neurosci, 2006)"
# make initial data set
DIV.all<-unique(df.allDIV$DIV)
#DIV.wanted=5
df.combo.list=list()
for (DIV.wanted in DIV.all){
df<-df.allDIV[ df.allDIV$DIV==DIV.wanted,  ]
df.mean<-aggregate( df, by=list(df$chem.dose), FUN=mean, na.rm=T)
df.sd<-aggregate( df, by=list(df$chem.dose), FUN=sd, na.rm=T)
df.n<-aggregate( df, by=list(df$chem.dose), FUN=length)
df.se<-cbind(chem.dose.group=df.sd[,1],
df.sd[,2:length(df.sd[1,])]/sqrt( df.n[,2] ) )
names(df.sd)<-paste(names(df.mean),"sd",sep=".")
names(df.se)<-paste(names(df.mean),"se",sep=".")
df.combo<-cbind( df.mean[ ,c(9:26)], df.sd[ ,c(9:26)] )
order.combo.names<-sort(names(df.combo))
df.combo<-df.combo[ ,order.combo.names]
df.combo.temp<-cbind(chem.dose=df.mean[,1], n=df.n[,2], df.combo)
df.combo.list[[paste(DIV.wanted)]]<-df.combo.temp
} # end of loop through DIV.wanted
unique(df.allDIV$DIV)
debugSource('F:/Kathleen/Analysis/DIVtable/make-table-by-chem-v2.R')
debugSource('F:/Kathleen/Analysis/DIVtable/make-table-by-chem-v2.R')
EPA=0
drive.letter<-"F"
if(EPA){
data.dir<-"L:/Lab/NHEERL_MEA/PIP3 - Project/Data/Specific Aim 1/prepared_data/"
output.dir<-
"L:/Lab/NHEERL_MEA/PIP3 - Project/Analysis/DIVtable/"
} else{
data.dir<-paste(drive.letter,":/Kathleen/Data/prepared_data/",sep="")
output.dir<-paste(drive.letter,
":/Kathleen/Analysis/DIVtable/",
sep="")
}
data<-paste(data.dir,"AllABEOntogeny_files.csv",sep="")
temp.df<-read.table(data,sep=",",header=T)
df.allDIV<-temp.df[temp.df$DIV!=12.1, ]
df.allDIV<-df.allDIV[!grepl(df.allDIV$trt,pattern="BIC"), ]
chem.dose<-paste( df.allDIV$trt, df.allDIV$dose,sep="_"  )
index.c<-which(df.allDIV$dose==0)
# need to make a new variable with plate
chem.dose[index.c]<-paste("cont",
df.allDIV$date[index.c],
df.allDIV$Plate.SN[index.c],
sep="_")
df.allDIV$chem.dose<-chem.dose
endpoints.wanted<-setdiff(
names(df.allDIV)[which(is.element(sapply( df.allDIV, class),
c("numeric","integer")))],
c("date","DIV","dose") )
#make laymens names for endpoints
temp.ep<-endpoints.wanted
temp.ep[which(temp.ep=="meanfiringrate")]<-
"Mean firing rate on AE"
temp.ep[which(temp.ep=="per.spikes.in.burst")]<-
"% Spikes in Bursts on ABE"
temp.ep[which(temp.ep=="mean.IBIs")]<-
"Inter Burst Interval on ABE (s)"
temp.ep[which(temp.ep=="mean.dur")]<-
"Burst Duration on ABE (s)"
temp.ep[which(temp.ep=="mean.isis")]<-"Inter Spike Interval in Burst on ABE"
temp.ep[which(temp.ep=="nABE")]<-
"# Actively Bursting Electrodes (>=0.5 burst/min)"
temp.ep[which(temp.ep=="nAE")]<-
"# Active Electrodes (>=5spikes/min)"
temp.ep[which(temp.ep=="r")]<-
"Correlation Coefficient all electrodes (r)"
temp.ep[which(temp.ep=="cv.network")]<-
"CV Network all electrodes (Keefer, 2013)"
temp.ep[which(temp.ep=="cv.time")]<-
"CV Time all electrodes (Keefer, 2013)"
temp.ep[which(temp.ep=="ns.peak.m")]<-
"# Spikes at Peak Network Spike (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.mean.spikes.in.ns")]<-
"# Spikes in Network Spike (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.n")]<-
"# Network Spikes (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.durn.m")]<-
"Network Spike Duration (s) (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.mean.spikes.in.ns")]<-
"# Spikes in Network Spikes (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.durn.sd")]<-
"sd of Network Spike duration (s) (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.mean.insis")]<-
"ISI of Spikes in Network Spikes (s) (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.percent.of.spikes.in.ns")]<-
"% Spikes in Network Spikes (Eytan & Marom, J Neurosci, 2006)"
unique(df.allDIV$DIV)
DIV.all<-unique(df.allDIV$DIV)
#DIV.wanted=5
df.combo.list=list()
for (DIV.wanted in DIV.all){
df<-df.allDIV[ df.allDIV$DIV==DIV.wanted,  ]
df.mean<-aggregate( df, by=list(df$chem.dose), FUN=mean, na.rm=T)
df.sd<-aggregate( df, by=list(df$chem.dose), FUN=sd, na.rm=T)
df.n<-aggregate( df, by=list(df$chem.dose), FUN=length)
df.se<-cbind(chem.dose.group=df.sd[,1],
df.sd[,2:length(df.sd[1,])]/sqrt( df.n[,2] ) )
names(df.sd)<-paste(names(df.mean),"sd",sep=".")
names(df.se)<-paste(names(df.mean),"se",sep=".")
df.combo<-cbind( df.mean[ ,c(9:26)], df.sd[ ,c(9:26)] )
order.combo.names<-sort(names(df.combo))
df.combo<-df.combo[ ,order.combo.names]
df.combo.temp<-cbind(chem.dose=df.mean[,1], n=df.n[,2], df.combo)
df.combo.list[[paste(DIV.wanted)]]<-df.combo.temp
} # end of loop through DIV.wanted
# get a list of all chemicals in file
chem.all<-unique( unlist( lapply( strsplit( unique(df.allDIV$chem.dose[
!grepl( df.allDIV$chem.dose, pattern="^cont")] ), split="_" ),
function(x) x[1] ) ) )
chem.all
for (cur.chem in chem.all ){
# cur.chem="Mevastatin"
# get which plates the chemical was on
control.plates.wanted<-unique( paste("cont",
df.allDIV$date[df.allDIV$trt==cur.chem] ,
df.allDIV$Plate.SN[df.allDIV$trt==cur.chem] ,
sep="_" ) )
chem.dose.wanted<-unique( df.allDIV$chem.dose[
grepl(pattern=paste(cur.chem), df.allDIV$chem.dose) ])
for (cur.ep in endpoints.wanted ){
## control
#make control.chem.dose
df.by.con.temp<-matrix(0, nrow=length(DIV.all), ncol=3)
rownames(df.by.con.temp)<-DIV.all
colnames(df.by.con.temp)<-paste(c(paste("mean",cur.ep,"cont",sep="-"),
paste("sd",cur.ep,"cont",sep="-"),
paste("n",cur.ep,"cont",sep="-") ),
sep="-")
for (cur.DIV in DIV.all){
# get index of DIV in list
cur.DIV.index<-which(cur.DIV==DIV.all)
#which entry is wanted
chem.dose.wanted.index<-which(
is.element(df.combo.list[[cur.DIV.index]]$chem.dose,
control.plates.wanted) )
# get row wanted
cur.control.data<-unlist( df.combo.list[[
cur.DIV.index]][ chem.dose.wanted.index, cur.ep] )
m.c<-mean(cur.control.data, na.rm=T )
sd.c<-sd( cur.control.data, na.rm=T )
n.c<-length(cur.control.data)
cur.info<-c(m.c, sd.c, n.c )
# in case of empty matrix
if (length(cur.info)==3 ){
df.by.con.temp[cur.DIV.index, ]<-cur.info
}
} # end of cur.DIV
# prepend a 0 row to df
ep.need.zero<-c("meanfiringrate","burst.per.min", "nAE", "nABE")
if (!is.element(2, DIV.all)&is.element(cur.ep, ep.need.zero) ){
tempnames<-c(2, rownames(df.by.con.temp) )
df.by.con.temp<-rbind(rep(0, length(df.by.con.temp[1,] ) ),
df.by.con.temp )
rownames(df.by.con.temp)<-tempnames
}
df.by.con<- df.by.con.temp
for (cur.chem.dose in chem.dose.wanted ){
# make empty matrix
df.by.con.temp<-matrix(0, nrow=length(DIV.all), ncol=3)
rownames(df.by.con.temp)<-DIV.all
colnames(df.by.con.temp)<-paste(c(paste("mean",cur.ep,sep="-"),
paste("sd",cur.ep,sep="-"),
paste("n",cur.ep,sep="-") ),
cur.chem.dose,
sep="-")
for (cur.DIV in DIV.all){
# get index of DIV in list
cur.DIV.index<-which(cur.DIV==DIV.all)
#which entry is wanted
chem.dose.wanted.index<-which(
df.combo.list[[cur.DIV.index]]$chem.dose==cur.chem.dose  )
# which varaibles are wanted
vars.wanted<-c(cur.ep, paste(cur.ep,".sd",sep=""),"n")
# get row wanted
cur.info<-unlist( df.combo.list[[
cur.DIV.index]][ chem.dose.wanted.index, vars.wanted] )
# in case of empty matrix
if (length(cur.info)==3 ){
df.by.con.temp[cur.DIV.index, ]<-cur.info
}
} # end of cur.DIV
# prepend a 0 row to df
ep.need.zero<-c("meanfiringrate","burst.per.min", "nAE", "nABE")
if (!is.element(2, DIV.all)&is.element(cur.ep, ep.need.zero) ){
tempnames<-c(2, rownames(df.by.con.temp) )
df.by.con.temp<-rbind(rep(0, length(df.by.con.temp[1,] ) ),
df.by.con.temp )
}
df.by.con<-cbind(df.by.con, df.by.con.temp)
} # end of cur.chem.dose
#make header
L=length(df.by.con[1,])
output.header<-rep(" ",L )
temp<-unlist(lapply(strsplit( colnames(df.by.con),split="-" ),
function(x) x[3] ))
temp2<-unlist(lapply(strsplit( temp, split="_" ),
function(x) x[2] ))
temp2[1:3]<-c("control","0","0")
output.header[seq(1,L,3)]<-temp2[seq(1,L,3)]
b<-data.frame(rbind( rep(" ", length(output.header)+1 ),
c("Dose",output.header ) ) )
#add in DIV
if (!is.element(2, DIV.all)&is.element(cur.ep, ep.need.zero) ){
df.by.con<-cbind(DIV=c(2,DIV.all), df.by.con )
}else {
df.by.con<-cbind(DIV=DIV.all, df.by.con )
}
#rerrage colnames
output.col.names<-
unlist(lapply(strsplit( colnames(df.by.con),split="-" ),
function(x) x[1] ))
colnames(df.by.con)<-output.col.names
##### output
output.path<-paste(output.dir, cur.chem,".csv",sep="")
name.cur.ep<-temp.ep[cur.ep==endpoints.wanted]
# check its first write to file
if (cur.ep==endpoints.wanted[1]){
temp.plates<-paste(unlist(lapply(strsplit(control.plates.wanted,
split="_" ),
function(x) x[2])),
unlist(lapply(strsplit(control.plates.wanted,
split="_" ),
function(x) x[3]) ),
sep="_" )
temp<-c("Plates Used",  temp.plates )
write.table(file=output.path, temp, sep=",", append=T,
col.names=F, row.names=F)
}
write.table(file=output.path, " ", sep=",", append=T,
col.names=F, row.names=F)
write.table(file=output.path, " ", sep=",", append=T,
col.names=F, row.names=F)
write.table(file=output.path, name.cur.ep, sep=",", append=T,
row.names=F, col.names=F )
write.table(file=output.path, b,
sep=",", append=T, row.names=F, col.names=F )
write.table(file=paste( output.path), df.by.con,  sep=",",
append=T,row.names=F, col.names=T )
} #end of cur.ep
} #end of cur.chem
source('F:/Kathleen/Analysis/DIVtable/make-table-by-chem-v2.R')
temp3
output.header
source('F:/Kathleen/Analysis/DIVtable/make-table-by-chem-v2.R')
x<-c("c",0)
x
source('F:/Kathleen/Analysis/DIVtable/make-table-by-chem-v2.R')
rm(list=ls())
source('F:/Kathleen/Analysis/DIVtable/make-table-by-chem-v2.R')
library(meadq)
EPA=0
drive.letter<-"F"
if(EPA){
data.dir<-"L:/Lab/NHEERL_MEA/PIP3 - Project/Data/Specific Aim 1/prepared_data/"
output.dir<-
"L:/Lab/NHEERL_MEA/PIP3 - Project/Analysis/DIVtable/"
} else{
data.dir<-paste(drive.letter,":/Kathleen/Data/prepared_data/",sep="")
output.dir<-paste(drive.letter,
":/Kathleen/Analysis/DIVtable/",
sep="")
}
data<-paste(data.dir,"AllABEOntogeny_files.csv",sep="")
temp.df<-read.table(data,sep=",",header=T)
df.allDIV<-temp.df[temp.df$DIV!=12.1, ]
df.allDIV<-df.allDIV[!grepl(df.allDIV$trt,pattern="BIC"), ]
chem.dose<-paste( df.allDIV$trt, df.allDIV$dose,sep="_"  )
index.c<-which(df.allDIV$dose==0)
# need to make a new variable with plate
chem.dose[index.c]<-paste("cont",
df.allDIV$date[index.c],
df.allDIV$Plate.SN[index.c],
sep="_")
df.allDIV$chem.dose<-chem.dose
endpoints.wanted<-setdiff(
names(df.allDIV)[which(is.element(sapply( df.allDIV, class),
c("numeric","integer")))],
c("date","DIV","dose") )
#make laymens names for endpoints
temp.ep<-endpoints.wanted
temp.ep[which(temp.ep=="meanfiringrate")]<-
"Mean firing rate on AE"
temp.ep[which(temp.ep=="burst.per.min")]<-
"Bursts per Minute on AE"
temp.ep[which(temp.ep=="per.spikes.in.burst")]<-
"% Spikes in Bursts on ABE"
temp.ep[which(temp.ep=="mean.IBIs")]<-
"Inter Burst Interval on ABE (s)"
temp.ep[which(temp.ep=="mean.dur")]<-
"Burst Duration on ABE (s)"
temp.ep[which(temp.ep=="mean.isis")]<-"Inter Spike Interval in Burst on ABE"
temp.ep[which(temp.ep=="nABE")]<-
"# Actively Bursting Electrodes (>=0.5 burst/min)"
temp.ep[which(temp.ep=="nAE")]<-
"# Active Electrodes (>=5spikes/min)"
temp.ep[which(temp.ep=="r")]<-
"Correlation Coefficient all electrodes (r)"
temp.ep[which(temp.ep=="cv.network")]<-
"CV Network all electrodes (Keefer, 2013)"
temp.ep[which(temp.ep=="cv.time")]<-
"CV Time all electrodes (Keefer, 2013)"
temp.ep[which(temp.ep=="ns.peak.m")]<-
"# Spikes at Peak Network Spike (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.mean.spikes.in.ns")]<-
"# Spikes in Network Spike (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.n")]<-
"# Network Spikes (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.durn.m")]<-
"Network Spike Duration (s) (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.mean.spikes.in.ns")]<-
"# Spikes in Network Spikes (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.durn.sd")]<-
"sd of Network Spike duration (s) (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.mean.insis")]<-
"ISI of Spikes in Network Spikes (s) (Eytan & Marom, J Neurosci, 2006)"
temp.ep[which(temp.ep=="ns.percent.of.spikes.in.ns")]<-
"% Spikes in Network Spikes (Eytan & Marom, J Neurosci, 2006)"
# make initial data set
DIV.all<-unique(df.allDIV$DIV)
#DIV.wanted=5
df.combo.list=list()
for (DIV.wanted in DIV.all){
df<-df.allDIV[ df.allDIV$DIV==DIV.wanted,  ]
df.mean<-aggregate( df, by=list(df$chem.dose), FUN=mean, na.rm=T)
df.sd<-aggregate( df, by=list(df$chem.dose), FUN=sd, na.rm=T)
df.n<-aggregate( df, by=list(df$chem.dose), FUN=length)
df.se<-cbind(chem.dose.group=df.sd[,1],
df.sd[,2:length(df.sd[1,])]/sqrt( df.n[,2] ) )
names(df.sd)<-paste(names(df.mean),"sd",sep=".")
names(df.se)<-paste(names(df.mean),"se",sep=".")
df.combo<-cbind( df.mean[ ,c(9:26)], df.sd[ ,c(9:26)] )
order.combo.names<-sort(names(df.combo))
df.combo<-df.combo[ ,order.combo.names]
df.combo.temp<-cbind(chem.dose=df.mean[,1], n=df.n[,2], df.combo)
df.combo.list[[paste(DIV.wanted)]]<-df.combo.temp
} # end of loop through DIV.wanted
##############  make data set ready for output
# get a list of all chemicals in file
chem.all<-unique( unlist( lapply( strsplit( unique(df.allDIV$chem.dose[
!grepl( df.allDIV$chem.dose, pattern="^cont")] ), split="_" ),
function(x) x[1] ) ) )
cur.chem=chem.all[1]
